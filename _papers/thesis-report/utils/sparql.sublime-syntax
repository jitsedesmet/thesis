%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: SPARQL
file_extensions:
  - rq
  - sparql
scope: source.sparql
contexts:
  main:
    - include: comments
    - include: strings
    - include: string-language-suffixes
    - include: string-datatype-suffixes
    - include: logic-operators
    - include: relative-urls
    - include: xml-schema-types
    - include: rdf-schema-types
    - include: owl-types
    - include: qnames
    - include: keywords
    - include: built-in-functions
    - include: variables
    - include: boolean-literal
    - include: punctuation-operators
  boolean-literal:
    - match: (true|false)
      scope: constant.language.boolean.sparql
  built-in-functions:
    - match: "([Aa][Bb][Ss])|([Aa][Vv][Gg])|([Bb][Nn][Oo][Dd][Ee])|([Bb][Oo][Uu][Nn][Dd])|([Cc][Ee][Ii][Ll])|([Cc][Oo][Aa][Ll][Ee][Ss][Cc][Ee])|([Cc][Oo][Nn][Cc][Aa][Tt])|([Cc][Oo][Nn][Tt][Aa][Ii][Nn][Ss])|([Cc][Oo][Uu][Nn][Tt])|([Dd][Aa][Tt][Aa][Tt][Yy][Pp][Ee])|([Dd][Aa][Yy])|([Ee][Nn][Cc][Oo][Dd][Ee]_[Ff][Oo][Rr]_[Uu][Rr][Ii])|([Ee][Xx][Ii][Ss][Tt][Ss])|([Ff][Ll][Oo][Oo][Rr])|([Gg][Rr][Oo][Uu][Pp]_[Cc][Oo][Nn][Cc][Aa][Tt])|([Hh][Oo][Uu][Rr][Ss])|([Ii][Ff])|([Ii][Rr][Ii])|([Ii][Ss][Bb][Ll][Aa][Nn][Kk])|([Ii][Ss][Ii][Rr][Ii])|([Ii][Ss][Ll][Ii][Tt][Ee][Rr][Aa][Ll])|([Ii][Ss][Nn][Uu][Mm][Ee][Rr][Ii][Cc])|([Ii][Ss][Uu][Rr][Ii])|([Ll][Aa][Nn][Gg])|([Ll][Aa][Nn][Gg][Mm][Aa][Tt][Cc][Hh][Ee][Ss])|([Ll][Cc][Aa][Ss][Ee])|([Mm][Aa][Xx])|([Mm][Dd]5)|([Mm][Ii][Nn])|([Mm][Ii][Nn][Uu][Tt][Ee][Ss])|([Mm][Oo][Nn][Tt][Hh])|([Nn][Oo][Ww])|([Rr][Aa][Nn][Dd])|([Rr][Ee][Gg][Ee][Xx])|([Rr][Ee][Pp][Ll][Aa][Cc][Ee])|([Rr][Oo][Uu][Nn][Dd])|([Ss][Aa][Mm][Ee][Tt][Ee][Rr][Mm])|([Ss][Aa][Mm][Pp][Ll][Ee])|([Ss][Ee][Cc][Oo][Nn][Dd][Ss])|([Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr])|([Ss][Hh][Aa](1|256|384|512))|([Ss][Tt][Rr])|([Ss][Tt][Rr][Aa][Ff][Tt][Ee][Rr])|([Ss][Tt][Rr][Bb][Ee][Ff][Oo][Rr][Ee])|([Ss][Tt][Rr][Dd][Tt])|([Ss][Tt][Rr][Ee][Nn][Dd][Ss])|([Ss][Tt][Rr][Ll][Aa][Nn][Gg])|([Ss][Tt][Rr][Ll][Ee][Nn])|([Ss][Tt][Rr][Ss][Tt][Aa][Rr][Tt][Ss])|([Ss][Tt][Rr][Uu][Uu][Ii][Dd])|([Ss][Uu][Bb][Ss][Tt][Rr])|([Ss][Uu][Mm])|([Tt][Ii][Mm][Ee][Zz][Oo][Nn][Ee])|([Tt][Zz])|([Uu][Cc][Aa][Ss][Ee])|([Uu][Rr][Ii])|([Uu][Uu][Ii][Dd])|([Yy][Ee][Aa][Rr])"
      scope: support.function.sparql
  comments:
    - match: (#).*$\n?
      scope: comment.line.hash.sparql
      captures:
        1: punctuation.definition.comment.sparql
  keywords:
    - match: "([Aa][Dd][Dd])|([Aa][Ll][Ll])|([Aa][Ss])|([As][Ss][Cc])|([Aa][Ss][Kk])|([Bb][Aa][Ss][Ee])|([Bb][Ii][Nn][Dd])|([Bb][Yy])|([Cc][Ll][Ee][Aa][Rr])|([Cc][Oo][Nn][Ss][Tt][Rr][Uu][Cc][Tt])|([Cc][Oo][Pp][Yy])|([Cc][Rr][Ee][Aa][Tt][Ee])|([Dd][Aa][Tt][Aa])|([Dd][Ee][Ff][Aa][Uu][Ll][Tt])|([Dd][Ee][Ll][Ee][Tt][Ee])|([Dd][Ee][Sc][Cc])|([Dd][Ee][Ss][Cc][Rr][Ii][Bb][Ee])|([Dd][Ii][Ss][Tt][Ii][Nn][Cc][Tt])|([Dd][Rr][Oo][Pp])|([Ff][Ii][Ll][Tt][Ee][Rr])|([Ff][Rr][Oo][Mm])|([Gg][Rr][Aa][Pp][Hh])|([Gg][Rr][Oo][Uu][Pp])|([Hh][Aa][Vv][Ii][Nn][Gg])|([Ii][Nn][Ss][Ee][Rr][Tt])|([Ll][Ii][Mm][Ii][Tt])|([Ll][Oo][Aa][Dd])|([Mm][Ii][Nn][Uu][Ss])|([Mm][Oo][Vv][Ee])|([Nn][Aa][Mm][Ee][Dd])|([Oo][Ff][Ff][Ss][Ee][Tt])|([Oo][Pp][Tt][Ii][Oo][Nn][Aa][Ll])|([Oo][Rr][Dd][Ee][Rr])|([Pp][Rr][Ee][Ff][Ii][Xx])|([Rr][Ee][Dd][Uu][Cc][Ee][Dd])|([Ss][Ee][Ll][Ee][Cc][Tt])|([Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr])|([Ss][Ee][Rr][Vv][Ii][Cc][Ee])|([Ss][Ii][Ll][Ee][Nn][Tt])|([Tt][Oo])|([Uu][Nn][Dd][Ee][Ff])|([Uu][Nn][Ii][Oo][Nn])|([Uu][Ss][Ii][Nn][Gg])|([Vv][Aa][Ll][Uu][Ee][Ss])|([Ww][He][Ee][Rr][Ee])|([Ww][Ii][Tt][Hh])"
      scope: keyword.other.sparql
  logic-operators:
    - match: (\|\|)|(&&)|=|(!=)|<|>|(<=)|(>=)|((^|!?\s)IN(!?\s|$))|((^|!?\s)NOT(!?\s|$))|-|\+|\*|/|\!
      scope: keyword.operator.logical.sparql
  owl-types:
    - match: "owl:[a-zA-Z]+"
      scope: support.type.datatype.owl.sparql
  punctuation-operators:
    - match: '(;|,|\.|\(|\)|\{|\}|\|)'
      scope: keyword.operator.punctuation.sparql
  qnames:
    - match: "([a-zA-Z][-_a-zA-Z0-9]*)?:([_a-zA-Z][-_a-zA-Z0-9]*)?"
      scope: entity.name.other.qname.sparql
  rdf-schema-types:
    - match: '(rdfs?:[a-zA-Z]+|(^|\s)a(\s|$))'
      scope: support.type.datatype.rdf.schema.sparql
  relative-urls:
    - match: <
      push:
        - meta_scope: string.quoted.other.relative.url.sparql
        - match: ">"
          pop: true
  string-datatype-suffixes:
    - match: \^\^
      scope: keyword.operator.datatype.suffix.sparql
  string-language-suffixes:
    - match: '(?!")(@)([a-z]+(\-[a-z0-9]+)*)'
      captures:
        1: keyword.operator.language.suffix.sparql
        2: constant.language.suffix.sparql
  strings:
    - match: '"""'
      push:
        - meta_scope: string.quoted.triple.sparql
        - match: '"""'
          pop: true
    - match: '"'
      push:
        - meta_scope: string.quoted.double.sparql
        - match: '"'
          pop: true
        - match: \n
          scope: invalid.string.newline
        - match: \\.
          scope: constant.character.escape.sparql
  variables:
    - match: '(\?|\$)[-_a-zA-Z0-9]+'
      scope: variable.other.sparql
  xml-schema-types:
    - match: "xsd?:[a-z][a-zA-Z]+"
