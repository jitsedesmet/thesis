PREFIX sgv: <https://thesis.jitsedesmet.be/solution/storage-guidance-vocabulary/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX ldes: <https://w3id.org/ldes#>
PREFIX tree: <https://w3id.org/tree#>

<ResourceCollectionShape> {
   rdf:type [ sgv:resource-collection ] ;
   sgv:client-control {
      rdf:type [
      sgv:free-client sgv:additional-allowed
      sgv:allowed-when-not-preffered
      sgv:allow-when-not-claimed sgv:no-control
      ] ;
   } ? ;
   sgv:one-file-one-resource xsd:boolean ? ;
}

<StructuredCollectionShape> {
  &<ResourceCollectionShape> ;
  rdf:type [ sgv:structured-collection ] ;
  sgv:group-strategy <GroupStrategyShape> ;
# Copied from the LDES vocabulary, fan of the idea!
  sgv:retention-policy {
    rdf:type ldes:DurationAgoPolicy ;
    tree:value xsd:duration ;
  } ?
}

<CanonicalCollectionShape> {
  &<StructuredCollectionShape> ;
  sgv:store-condition {
    rdf:type [
      sgv:state-required sgv:always-stored
      sgv:prefer-other sgv:prefer-most-specific
      sgv:only-stored-when-not-redundant sgv:store-never
    ] ;
    sgv:update-condition <UpdateConditionShape>
  } + ;
}

<DerivedCollectionShape> {
  &<CanonicalCollectionShape> ;
  sgv:derived-from {
    sgv:resource-descripion <ResourceDescriptionShape> ;
    sgv:source IRI ;
    sgv:filter xsd:string ;
  } +
}

# Any ldp:Container in a structured collection is a GroupedCollection
<GroupedCollection> {
  &<GroupStrategy>
}

<GroupStrategyShape> {
    rdf:type sgv:group-strategty-uri-template ;
    sgv:uri-template xsd:string ;
    sgv:regexMatch xsd:string ;
    sgv:refexReplace xsd:string ;
  |
    rdf:type sgv:group-strategy-sparql ;
    sgv:sparql-query xsd:string ;
}

<UpdateConditionShape> {
  (
    rdf:type [
      sgv:update-keep-always sgv:prefer-static sgv:best-matched
      sgv:update-disallow sgv:removal-only sgv:state-dependent
    ] ;
  |
    rdf:type [ sgv:keep-distance ] ;
    sgv:distance xsd:decimal ;
  ) ;
  sgv:resource-descripion <ResourceDescriptionShape> ;
}

<ResourceDescriptionShape> {
  rdf:type sgv:shacl-descriptor ;
  sgv:shacl-shape IRI ;
}
